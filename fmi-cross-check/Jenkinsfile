pipeline {
    agent {
        label 'master'
    }

    stages {
        stage('Environment') {
            parallel {
                stage('Hello') {
                    steps {
                        echo 'This is a local Jenkinsfile'
                        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
                        echo "WORKSPACE: ${env.WORKSPACE}"
                        sh 'pwd'
                    }
                }
                stage('Clone fmi-cross-check') {
                    steps {
                        dir('fmi-cross-check') {
                            git branch: 'master', url: 'https://github.com/AnHeuermann/fmi-cross-check.git'
                        }
                        sh "ls fmi-cross-check/"
                    }
                }
                stage('Clone OpenModelicaBuildScripts') {
                    steps {
                        dir('OpenModelicaBuildScripts') {
                            git branch: 'fmi-cross-check', url: 'https://github.com/AnHeuermann/OpenModelicaBuildScripts.git'
                        }
                        sh "ls OpenModelicaBuildScripts/"
                    }
                }
            }
        }

        stage('Prepare fmi-cross-check') {
            agent {
                docker {
                    image "anheuermann/openmodelica:nightly-1.16-dev-focal"
                    alwaysPull true
                    args "-v ${env.WORKSPACE}/fmi-cross-check:/fmi-cross-check -v ${env.WORKSPACE}/OpenModelicaBuildScripts:/OpenModelicaBuildScripts"
                }
            }
            steps ('Prepare fmi-cross-check') {
                sh "git --version"
                sh "cd /fmi-cross-check && git clean -fdx"
                sh "ls /fmi-cross-check"
                sh "ls /OpenModelicaBuildScripts"
                sh "ls /OpenModelicaBuildScripts/fmi-cross-check/"
                sh "cp /OpenModelicaBuildScripts/fmi-cross-check/Makefile /fmi-cross-check/"
                sh "cp /OpenModelicaBuildScripts/fmi-cross-check/buildFMUs.mos /fmi-cross-check/"
                sh "cp /OpenModelicaBuildScripts/fmi-cross-check/testModels.mos /fmi-cross-check/"
                sh "ls /fmi-cross-check"
                sh "make -C /fmi-cross-check/ checkout-git"
            }
        }

        stage('Compile FMUs') {
            parallel {
                stage('Linux 64') {
                    agent {
                        docker {
                            image "anheuermann/openmodelica:nightly-1.16-dev-focal"
                            args "-v ${env.WORKSPACE}/fmi-cross-check:/fmi-cross-check"
                        }
                    }
                    steps {
                        sh "cat /etc/os-release"
                        sh "omc --version"
                        sh "make -C /fmi-cross-check/ compile-OpenModelica-FMUS"
                    }
                }
                stage('Linux 32') {
                    agent {
                        docker {
                            image "anheuermann/openmodelica:nightly-1.16-dev-focal"
                            args "-v ${env.WORKSPACE}/fmi-cross-check:/fmi-cross-check"
                        }
                    }
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh "cat /etc/os-release"
                            sh "omc --version"
                            //sh "make -C /fmi-cross-check/ compile-OpenModelica-FMUS"
                        }
                    }
                }
            }
        }

        stage('Validate FMUs') {
            parallel {
                stage('Linux 64') {
                    agent {
                        docker {
                            image "anheuermann/fmpy:focal-arm64"
                            args "-v ${env.WORKSPACE}/fmi-cross-check:/fmi-cross-check"
                        }
                    }
                    steps {
                        sh "cat /etc/os-release"
                        sh "find /fmi-cross-check/fmus -name *.fmu | grep \"OpenModelica\""
                        sh "make -C /fmi-cross-check/ validate-files"
                    }
                }
                stage('Linux 32') {
                    agent {
                        docker {
                            image "anheuermann/fmpy:nightly-1.16-dev-focal"
                            args "-v ${env.WORKSPACE}/fmi-cross-check:/fmi-cross-check"
                        }
                    }
                    steps {
                        sh "cat /etc/os-release"
                        sh "find /fmi-cross-check/fmus -name *.fmu | grep \"OpenModelica\""
                        //sh "make -C /fmi-cross-check/ validate-files"
                    }
                }
            }
        }

        stage('Upload to GitHub') {
            steps {
                echo "Uploding to OpenModelica/fmi-cross-check"
            }
        }
    }
}
